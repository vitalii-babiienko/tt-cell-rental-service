version: "3.7"

services:
  django:
    container_name: django_cell_rental_service
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - postgresql

  postgresql:
    image: postgres:15.4-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celeryworker:
    build:
      context: .
    command: "celery -A cell_rental_service worker -l INFO"
    env_file:
      - .env
    depends_on:
      - postgresql
      - redis
      - django
    restart: on-failure

  celerybeat:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
            celery -A cell_rental_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    depends_on:
      - postgresql
      - redis
      - django
    restart: on-failure

  flower:
    build:
      context: .
    ports:
      - "5555:5555"
    command: "celery -A cell_rental_service flower --address=0.0.0.0"
    env_file:
      - .env
    depends_on:
      - celeryworker
